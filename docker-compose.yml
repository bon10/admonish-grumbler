version: '3'
services:
  web:
    build: .
    container_name: "admonish-grumbler-app"
    ports:
      - "5500:5000"
    tty: true
    command: /bin/bash
    volumes:
      - .:/app
  mongo:
    image: mongo:6.0.6
    environment:
      - AUTH=no
    command: [--replSet, my-replica-set, --noauth, --bind_ip_all]
    ports:
      - 27017:27017
    healthcheck:
      #test: test $$(mongosh --port 27017 --quiet --eval "try {rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo:27017\"}]})} catch(e) {rs.status().ok}") -eq 1
      test: mongosh mongo-init.js
      interval: 10s
      start_period: 30s
    volumes:
      - mongodb_data:/data/db
      #- ./docker/db/init/:/docker-entrypoint-initdb.d/:ro
      - ./docker/db/init/db_init.js:/mongo-init.js
    restart: always
  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      #ME_CONFIG_MONGODB_URL: mongodb://@mongo:27017/
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
    depends_on:
      - mongo
# mongodbのデータはdocker volumeで管理されるので、消すときは docker volume rm mongodb_data
volumes:
  mongodb_data:
